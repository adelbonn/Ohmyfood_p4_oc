@use '../base/variables' as var;
@use '../base/functions' as func;
@use '../base/typo' as typo;
@use '../base/mixins' as mix;




//animation pour faire disparaitre le loader
//container du loader
.loader__anim--container {
    position: fixed;
    top:0;
    left:0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background: var.$color-grey;
    z-index: 9999;
    animation: fadeOutLoader 3s ease-in-out forwards;

}

//keyframes de disparition du loader
@keyframes fadeOutLoader {
    0% {
        opacity: 1;
        z-index: 999;
    }
   
   
    100% {
        opacity: 0;
        visibility: hidden;
        z-index: -1;
    }
}

//animation cercles loader

.loader__circle--anim {
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;

    .loader__circle {
        display: block;
        position: relative;
        width:350px;
        height: 350px;
        border-radius: 50%;
        border: 3px solid transparent;
        border-top-color: var.$secondary-color;
        animation: rotate-circle 3s linear infinite;
    
    &::before {
        content:'';
        position: absolute;
        top:5px;
        left: 5px;
        right:5px;
        bottom: 5px;
        border-radius: 50%;
        border: 3px solid transparent;
        border-top-color: var.$primary-color;
        animation: rotate-circle 2.5s alternate infinite;
    }

    &::after {
        content:'';
        position: absolute;
        top:15px;
        left: 15px;
        right:15px;
        bottom: 15px;
        border-radius: 50%;
        border: 3px solid transparent;
        border-top-color: var.$background-color2;
        animation: rotate-circle 1s alternate infinite;
    }
}}


@keyframes rotate-circle {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}
//texte (Ohmyfood) au centre des cercles loader

.loader___text {
    position: absolute;
    font-family: typo.$logo-font;
    font-size: 3rem;
    background: linear-gradient(90deg, var.$primary-color, var.$secondary-color);
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
   //text-shadow: 1px 1px 2px rgba(146, 86, 220, 0.5), 2px 2px 4px rgba(0, 0, 0, 0.5), 3px 3px 8px rgba(255, 121, 218, 0.5);
    animation: fadeInText 2s ease-in-out forwards; 
}
@keyframes fadeInText {
    0% {
      
        transform: translateY(30px);
    }
    100% {
    
        transform: translateY(0);
    }
}



//animation de la page d'accueil

//animation de base (fadeIn et translation)

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(-30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

//animation image header

.img__header {
    opacity:0;
    transform: translateY(-40px);
    animation: fadeInUp var.$base-duration ease-in-out forwards;
    animation-delay:0s;
}

//animation titre + container menu

.menu-container {
    opacity: 0;
    transform: scale(0.8);
    transform-origin: top;
    animation: fadeInUp var.$base-duration ease-in-out forwards;
    animation-delay: 0.2s;

    #menu__title {
        opacity: 0;
        transform: translateY(-60px);
        animation: fadeInUp var.$base-duration ease-in-out forwards;
        animation-delay: 0.25s;
    }
    .hearts {
        opacity: 0;
        transform: translateY(-30px);
        animation: fadeInUp var.$base-duration ease-in-out forwards;
        animation-delay: 0.25s;
}

//animation pour les sections (entrées, plats, desserts)

@for $i from 1 through 3 {
    .menu__cards:nth-of-type(#{$i}) h2.menu__title {
        opacity:0;
        transform: translateY(-30px);
        animation: fadeInUp var.$base-duration ease-in-out forwards;
    }
}

//animation pour les cartes de menus

@for $i from 1 through 4 {
    .menu__cards:nth-of-type(1) .menu__items:nth-child(#{$i}), //cartes entrées
    .menu__cards:nth-of-type(2) .menu__items:nth-child(#{$i}), //cartes plats
    .menu__cards:nth-of-type(3) .menu__items:nth-child(#{$i}) { //cartes desserts
        opacity: 0;
        transform-origin: top; 
        transform: translate(-30px);
        animation: fadeInUp var.$base-duration ease-in-out forwards;
//délai animation basé sur la position de chaque cartes,
        animation-delay: var.$delay-increment *$i + 0.4s;
    }
}
}

 //animation rectangle vert de la carte menu + check

 .menu__items {
   
    transition: transform 0.3s ease;
    //rectangle vert
    &::before {
        content:'';
        position: absolute;
        top:0;
        right: 0;
        height: 100%;
        width: 0;
        border-top-right-radius: 15px;
        border-bottom-right-radius: 15px;
        background: var.$green-color-bagde;
        z-index: 1;
        transition: width 0.3s ease-in-out; 
       // transition-delay: 500ms;
    }
 }

 .menu__price {
    position: relative;
    transition: transform 0.3s ease-in-out;
    /*transition: left 0.5s ease-in-out, right 0.5s ease-in-out;*/
    z-index: 3;
 }

 //icon du check dans le rectangle vert
 .menu__check--Wrap {
    position: absolute; 
    right: 0;
    top: 50%;
   
    width: var.$icon-size;
    height: var.$icon-size;
    @include mix.flex-center(row);
    color: var.$color-white; 
    font-size: var.$icon-size;
    //transition-delay: 500ms;
    transition: transform 0.3s ease-in-out;
    transform: translateY(-50%);
    opacity: 0;
    z-index: 2; 
   
 }

 //checkbox pour que le rectangle reste visible au clic de l'utilisateur
.menu__checkbox {
    display: none;
}

.menu__label {
    cursor: pointer;
    display: block;
    position: relative;
    transition: transform 0.3s ease-in-out;
}

// au hover le rectangle se déploit de droite a gauche sur 15% de largeur

.menu__label:hover .menu__items::before,
.menu__checkbox:checked + .menu__label .menu__items::before
{
    width: 15%;
    max-width: 75px;
    min-width: 55px;
}


@media screen and (min-width: 320px) {
    .menu__label:hover .menu__items::before,
    .menu__checkbox:checked + .menu__label .menu__items::before {
        width: 20%;
    }
}

@media screen and (min-width: 352px) {
    .menu__label:hover .menu__items::before,
    .menu__checkbox:checked + .menu__label .menu__items::before {
        width: 18%;
    }
}
@media screen and (min-width: 500px) {
    .menu__label:hover .menu__items::before,
    .menu__checkbox:checked + .menu__label .menu__items::before {
        width: 15%;
    }
}
@media screen and (min-width: 560px) {
    .menu__label:hover .menu__items::before,
    .menu__checkbox:checked + .menu__label .menu__items::before {
        width: 12%;
    }
    @media screen and (min-width: 768px) {
        .menu__label:hover .menu__items::before,
        .menu__checkbox:checked + .menu__label .menu__items::before {
            width: 10%;
        }
    }
    @media screen and (min-width: 1024px) {
        .menu__label:hover .menu__items::before,
        .menu__checkbox:checked + .menu__label .menu__items::before {
            width: 8%;
        }
    }
}
.menu__label:hover .menu__check--Wrap {
    transform: translateX(-100%) translateY(-50%) rotate(-360deg);
    opacity: 1;
}

.menu__label:hover .menu__price,
.menu__checkbox:checked + .menu__label .menu__price {  
   transform: translateX(calc(-100% - 10px)); //déplacement du prix de la carte


    /*@media screen and (min-width: 320px) {
      transform: translateX(calc(-100% - 25px));
    }

    @media screen and (min-width: 352px) {
        transform: translateX(calc(-100% - 20px));
    }
    
    @media screen and (min-width: 375px) {
        transform: translateX(calc(-100% - 25px));
    }*/

    @media screen and (min-width: 400px) {
        transform: translateX(calc(-100% - 35px));
    }
 

    @media screen and (min-width: 570px) {
        transform: translateX(calc(-100% - 30px));
    }
   @media screen and (min-width: 630px) {
    transform: translateX(calc(-100% - 45px));
   }
    @media screen and (min-width: 768px) {
      transform: translateX(calc(-100% - 40px));
    }

}
//ici si la carte est selectionnée au clic (via checkbox checked)
.menu__checkbox:checked + .menu__label .menu__check--Wrap {
    transform: translateX(-100%) translateY(-50%) rotate(-360deg); 
    opacity: 1; 
}


//rognage du texte des cartes au hover et au checked

.menu__label:hover .menu__meal h3,
.menu__checkbox:checked + .menu__label .menu__meal h3 {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.menu__label:hover .menu__meal p,
.menu__checkbox:checked + .menu__label .menu__meal p {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}